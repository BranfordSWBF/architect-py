# Generated by ariadne-codegen
# Source: queries.graphql

from typing import Any, List, Optional

from pydantic import Field

from .base_model import BaseModel
from .enums import OrderStateFlags
from .fragments import MarketFields


class GetOpenOrders(BaseModel):
    open_orders: List["GetOpenOrdersOpenOrders"] = Field(alias="openOrders")


class GetOpenOrdersOpenOrders(BaseModel):
    timestamp: Any
    order: "GetOpenOrdersOpenOrdersOrder"
    order_state: List[OrderStateFlags] = Field(alias="orderState")
    filled_qty: Any = Field(alias="filledQty")
    avg_fill_price: Optional[Any] = Field(alias="avgFillPrice")
    reject_reason: Optional[str] = Field(alias="rejectReason")


class GetOpenOrdersOpenOrdersOrder(BaseModel):
    id: Any
    market: "GetOpenOrdersOpenOrdersOrderMarket"
    dir: Any
    quantity: Any


class GetOpenOrdersOpenOrdersOrderMarket(MarketFields):
    pass


GetOpenOrders.model_rebuild()
GetOpenOrdersOpenOrders.model_rebuild()
GetOpenOrdersOpenOrdersOrder.model_rebuild()
